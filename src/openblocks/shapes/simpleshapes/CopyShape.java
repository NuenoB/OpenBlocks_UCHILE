package openblocks.shapes.simpleshapes;

import java.util.ArrayList;

import net.minecraft.util.ChunkCoordinates;
import net.minecraft.world.World;
import openblocks.shapes.AShape;
import openblocks.shapes.BlockRepresentation;
import openblocks.shapes.cond.ICondStrategy;
import openblocks.shapes.cond.OneBlockSt;
import openmods.shapes.IShapeable;

public class CopyShape extends AShape {

	public CopyShape() {
		super(new OneBlockSt());
	
	}

	@Override
	public ArrayList<BlockRepresentation> fill(ChunkCoordinates entityPos,
			World worldObj) {
		ArrayList<BlockRepresentation> array = new ArrayList<BlockRepresentation>();
		array.add(new BlockRepresentation(entityPos.posX+-4, entityPos.posY+-2, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-4, entityPos.posY+-1, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-3, entityPos.posY+-2, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-3, entityPos.posY+-1, entityPos.posZ+-2, 76, 5, 3));     array.add(new BlockRepresentation(entityPos.posX+-3, entityPos.posY+0, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-3, entityPos.posY+1, entityPos.posZ+-2, 55, 15, 3));     array.add(new BlockRepresentation(entityPos.posX+-2, entityPos.posY+-2, entityPos.posZ+-2, 55, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-2, entityPos.posY+-1, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-2, entityPos.posY+0, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-2, entityPos.posY+0, entityPos.posZ+-2, 29, 13, 3));     array.add(new BlockRepresentation(entityPos.posX+-2, entityPos.posY+0, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-2, entityPos.posY+1, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-2, entityPos.posY+1, entityPos.posZ+-2, 29, 13, 3));     array.add(new BlockRepresentation(entityPos.posX+-2, entityPos.posY+1, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-1, entityPos.posY+-2, entityPos.posZ+-2, 55, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-1, entityPos.posY+-1, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-1, entityPos.posY+0, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-1, entityPos.posY+0, entityPos.posZ+-2, 34, 13, 3));     array.add(new BlockRepresentation(entityPos.posX+-1, entityPos.posY+0, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-1, entityPos.posY+1, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-1, entityPos.posY+1, entityPos.posZ+-2, 34, 13, 3));     array.add(new BlockRepresentation(entityPos.posX+-1, entityPos.posY+1, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-1, entityPos.posY+2, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-1, entityPos.posY+2, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+-1, entityPos.posY+2, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+-2, entityPos.posZ+-3, 55, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+-2, entityPos.posZ+-2, 55, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+-2, entityPos.posZ+-1, 55, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+-2, entityPos.posZ+1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+-1, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+-1, entityPos.posZ+1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+0, entityPos.posZ+-3, 70, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+0, entityPos.posZ+-2, 42, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+0, entityPos.posZ+-1, 70, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+1, entityPos.posZ+-2, 42, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+2, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+2, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+0, entityPos.posY+2, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+1, entityPos.posY+-2, entityPos.posZ+-3, 55, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+1, entityPos.posY+-2, entityPos.posZ+-2, 55, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+1, entityPos.posY+-2, entityPos.posZ+-1, 55, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+1, entityPos.posY+-1, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+1, entityPos.posY+0, entityPos.posZ+-3, 70, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+1, entityPos.posY+0, entityPos.posZ+-2, 42, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+1, entityPos.posY+0, entityPos.posZ+-1, 70, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+1, entityPos.posY+1, entityPos.posZ+-2, 42, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+1, entityPos.posY+2, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+1, entityPos.posY+2, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+1, entityPos.posY+2, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+2, entityPos.posY+-2, entityPos.posZ+-2, 55, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+2, entityPos.posY+-1, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+2, entityPos.posY+0, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+2, entityPos.posY+0, entityPos.posZ+-2, 34, 12, 3));     array.add(new BlockRepresentation(entityPos.posX+2, entityPos.posY+0, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+2, entityPos.posY+1, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+2, entityPos.posY+1, entityPos.posZ+-2, 34, 12, 3));     array.add(new BlockRepresentation(entityPos.posX+2, entityPos.posY+1, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+2, entityPos.posY+2, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+2, entityPos.posY+2, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+2, entityPos.posY+2, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+3, entityPos.posY+-2, entityPos.posZ+-2, 55, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+3, entityPos.posY+-1, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+3, entityPos.posY+0, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+3, entityPos.posY+0, entityPos.posZ+-2, 29, 12, 3));     array.add(new BlockRepresentation(entityPos.posX+3, entityPos.posY+0, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+3, entityPos.posY+1, entityPos.posZ+-3, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+3, entityPos.posY+1, entityPos.posZ+-2, 29, 12, 3));     array.add(new BlockRepresentation(entityPos.posX+3, entityPos.posY+1, entityPos.posZ+-1, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+4, entityPos.posY+-2, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+4, entityPos.posY+-1, entityPos.posZ+-2, 76, 5, 3));     array.add(new BlockRepresentation(entityPos.posX+4, entityPos.posY+0, entityPos.posZ+-2, 24, 0, 3));     array.add(new BlockRepresentation(entityPos.posX+4, entityPos.posY+1, entityPos.posZ+-2, 55, 15, 3));

		return array;
	}

	@Override
	public void generateShape(int xSize, int ySize, int zSize,
			IShapeable shapeable) {
		// TODO Auto-generated method stub

	}

}
